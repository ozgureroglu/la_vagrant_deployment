---

openldap_nodetype: "provider"

openldap_slapd_domain: "{{ inventory_hostname }}"
openldap_slapd_admin_rootpw: admin12345
openldap_slapd_backend: "hdb"
openldap_slapd_port: "389"
openldap_slapd_admin: "cn=admin,dc=liderahenk,dc=org"
openldap_slapd_config_admin: "cn=admin,cn=config"
openldap_slapd_tls_cert: "/etc/openldap/ssl/slapdcert.pem"
openldap_slapd_tls_key: "/etc/openldap/ssl/slapdkey.pem"
openldap_slapd_suffix: "dc=liderahenk,dc=org"

lider_console_user: "lider_console"
lider_console_user_password: "secret"

openldap_ldif_list:
  - src: "base.ldif"
    dest: "/etc/ldap/base.ldif"
    creates: "/etc/ldap/rootdn_created"


openldap_data_ldif_list:
  - src: "ahenkler.ldif"
    dest: "/etc/ldap/ahenkler.ldif"
    creates: "/etc/ldap/ahenkler_created"

  - src: "lider_console_user.ldif"
    dest: "/etc/ldap/lider_console_user.ldif"
    creates: "/etc/ldap/lider_console_user_created"

openldap_schema_list:
  - src: "liderahenk.ldif"
    dest: "/tmp/liderahenk.ldif"
    creates: "/tmp/liderahenk_added"


openldap_debconfs:
  - question: "shared/organization"
    value: "{{ openldap_slapd_domain }}"
    vtype: "string"
  - question: "slapd/allow_ldap_v3"
    value: "true"
    vtype: "boolean"
  - question: "slapd/backend"
    value: "MDB"
    vtype: "select"
  - question: "slapd/domain"
    value: "{{ openldap_slapd_domain }}"
    vtype: "string"
  - question: "slapd/dump_database"
    value: "when needed"
    vtype: "select"
  - question: "slapd/dump_database_destdir"
    value: "/var/backups/slapd-VERSION"
    vtype: "string"
  - question: "slapd/internal/adminpw"
    value: "{{ openldap_slapd_internal_pw }}"
    vtype: "password"
  - question: "slapd/internal/generated_adminpw"
    value: "{{ openldap_slapd_internal_pw }}"
    vtype: "password"
  - question: "slapd/invalid_config"
    value: "true"
    vtype: "boolean"
  - question: "slapd/move_old_database"
    value: "true"
    vtype: "boolean"
  - question: "slapd/no_configuration"
    value: "false"
    vtype: "boolean"
  - question: "slapd/password1"
    value: "{{ openldap_slapd_admin_rootpw }}"
    vtype: "password"
  - question: "slapd/password2"
    value: "{{ openldap_slapd_admin_rootpw }}"
    vtype: "password"
  - question: "slapd/password_mismatch"
    value: ""
    vtype: "note"
  - question: "slapd/purge_database"
    value: "false"
    vtype: "boolean"
  - question: "slapd/upgrade_slapcat_failure"
    value: ""
    vtype: "error"

# Replication mods and ldifs
# AKA masters
openldap_provider_mod_list:
  - src: "mod_syncprov.ldif"
    dest: "/etc/ldap/mod_syncprov.ldif"
    creates: "/etc/ldap/mod_syncprov_created"

openldap_provider_ldif_list:
  - src: "syncprov.ldif"
    dest: "/etc/ldap/syncprov.ldif"
    creates: "/etc/ldap/syncprov_created"

# AKA slaves
# This takes a list of hostnames and builds the repl RID based on index
openldap_consumers: []
#openldap_consumers: "{{ groups['ldap_consumers'] }}"

# LDAP to contact for repl
openldap_consumer_provider_address: "{{ inventory_hostname }}"
openldap_consumer_provider_port: "389"

openldap_consumer_mod_list: []
# Syncrepl dif is the impl template for replication
openldap_consumer_ldif_list:
  - src: "syncrepl.ldif"
    dest: "/etc/ldap/syncrepl.ldif"
    creates: "/etc/ldap/syncrepl_created"